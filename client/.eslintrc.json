{
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["./tsconfig.json"],
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "extends": [
    "airbnb",
    "airbnb-typescript",
    "plugin:import/recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "rules": {
    "react/jsx-curly-brace-presence": "off", //jsx 문법 중괄호 체크 해제 (템플릿 리터럴 문법 사용)
    "arrow-body-style": "off", // 화살표 함수 중괄호 적용 혹은 생략 둘 다 가능
    "comma-dangle": "off", // trailing comma 생략 가능
    "consistent-return": "off", // 함수에 return문 생략 가능
    "func-names": "off", // 익명 함수 사용 가능
    "max-classes-per-file": "off", // 파일 하나당 클래스 개수 제한 없음
    // 한 줄에 120글자를 넘길 수 없음
    "max-len": [
      "error",
      {
        "code": 120,
        "ignoreComments": true, // 주석 제외
        "ignoreStrings": true, // 문자열 제외
        "ignoreTemplateLiterals": true // 템플릿 리터럴 제외
      }
    ],
    "@typescript-eslint/no-explicit-any": "warn",
    "no-console": "warn", // console.log 경고
    "no-nested-ternary": "off", // 중첩 삼항연산자 사용 가능
    "no-param-reassign": ["error", { "props": false }], // 함수 매개변수 재할당 불가
    "no-plusplus": "off", // 증감 연산자 사용 가능
    "no-shadow": "off", // 상위 스코프의 변수를 하위 스코프의 변수가 덮어쓸 수 있음
    "no-underscore-dangle": "off", // 언더스코어(_)를 변수명에 사용 가능
    // 사용하지 않는 표현식 금지
    "no-unused-expressions": [
      "error",
      {
        "allowTernary": true, // 삼항연산자 허용
        "allowShortCircuit": true, // 단축 평가 허용
        "allowTaggedTemplates": true // tagged template 허용
      }
    ],
    "no-unused-vars": ["off"], // 사용하지 않는 변수 선언 가능
    "no-use-before-define": "off", // 변수가 선언문보다 더 위에 있어도 사용 가능
    "prefer-arrow-callback": "error", // 콜백 함수는 반드시 화살표 함수로 작성
    "prefer-template": "off", // 문자열을 문자열 연결 연산자(+)로 연결 가능
    "require-await": "error", // 내부에 await 표현식 없이 async를 사용할 수 없음,
    "@typescript-eslint/no-var-requires": "off",
    "import/extensions": "off", // import 할 때 파일 확장자 작성하지 않아도 됨
    "@typescript-eslint/no-use-before-define": "off",
    "import/no-extraneous-dependencies": "off", // package.json에 명시되지 않은 외부 모듈 import 가능
    "import/prefer-default-export": "off", // 모듈에 export를 한 번만 사용해도 default export를 하지 않아도 됨
    "jsx-a11y/click-events-have-key-events": ["off"], // onKeyDown, onKeyUp, onKeyPress 없이 onClick을 사용해도 됨
    "jsx-a11y/control-has-associated-label": ["off"], // button 등의 interactive element를 텍스트 라벨 없이 사용할 수 있음
    "jsx-a11y/no-static-element-interactions": ["off"], // span,div 등의 non-interactive element를 role 없이 사용할 수 있음
    "jsx-a11y/label-has-associated-control": ["off"], // label과 input을 연관시키지(htmlFor - id) 않아도 됨
    "react/jsx-filename-extension": ["error", { "extensions": [".js", ".jsx", ".ts", ".tsx"] }], // jsx 파일 확장자 제한
    "react/jsx-no-useless-fragment": ["off"], // 무의미한(자식 요소가 1개 또는 fragment가 html의 자식인 경우) fragment 사용 가능
    "react/react-in-jsx-scope": "off", // jsx를 사용하기 위해 반드시 React를 import 하지 않아도 됨
    "react/require-default-props": "off", // defaultProps를 지정하지 않아도 됨
    "react/prop-types": ["off"], // propTypes 설정하지 않아도 됨
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "arrow-function"
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  }
}
